/*
 * GidsApplet: A Java Card implementation of the GIDS (Generic Identity
 * Device Specification) specification
 * https://msdn.microsoft.com/en-us/library/windows/hardware/dn642100%28v=vs.85%29.aspx
 *
 * Test Classes
 *
 * Copyright (C) 2016  Vincent Le Toux(vincent.letoux@mysmartlogon.com)
 *
 * It has been based on the IsoApplet
 * Copyright (C) 2014  Philip Wendland (wendlandphilip@gmail.com)
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 */

package com.mysmartlogon.gidsAppletTests;

import org.junit.Before;
import org.junit.Test;

public class MinidriverTest extends GidsBaseTestClass {

    @Before
    public void setUp() throws Exception {
        super.setUp();
        createcard();
    }

    @Test
    public void readEmptyCard() {
        execute("00 A4 04 00 09 A0 00 00 03 08 00 00 10 00", 0x6A82);
        execute("00 A4 00 0C 02 3F FF");
        execute("00 A4 04 00 09 A0 00 00 03 97 42 54 46 59 00", "61 12 4F 0B A0 00 00 03 97 42 54 46 59 02 01 73 03 40 01 C0 90 00");
        execute("00 CB 3F FF 04 5C 02 7F 73 00", 0x6A88);
        execute("00 CB A0 00 04 5C 02 DF 1F 00",
                "DF 1F 81 8D 01 6D 73 63 70 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 A0 00 00 00 00 00 00 00 00 00 00 00 63 61 72 64 69 64 00 00 00 00 00 20 DF 00 00 12 A0 00 00 00 00 00 00 00 00 00 00 00 63 61 72 64 61 70 70 73 00 00 00 21 DF 00 00 10 A0 00 00 00 00 00 00 00 00 00 00 00 63 61 72 64 63 66 00 00 00 00 00 22 DF 00 00 10 A0 00 00 6D 73 63 70 00 00 00 00 00 63 6D 61 70 66 69 6C 65 00 00 00 23 DF 00 00 10 A0 00 00 90 00");
//		execute("00 CB A0 12 04 5C 02 DF 20 00",
//				"DF 20 10 A7 F5 C7 42 89 55 7B C0 7E 9A 9D E3 DD BD 21 D7 90 00");
        execute("00 CB A0 00 04 5C 02 DF 1F 00",
                "DF 1F 81 8D 01 6D 73 63 70 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 A0 00 00 00 00 00 00 00 00 00 00 00 63 61 72 64 69 64 00 00 00 00 00 20 DF 00 00 12 A0 00 00 00 00 00 00 00 00 00 00 00 63 61 72 64 61 70 70 73 00 00 00 21 DF 00 00 10 A0 00 00 00 00 00 00 00 00 00 00 00 63 61 72 64 63 66 00 00 00 00 00 22 DF 00 00 10 A0 00 00 6D 73 63 70 00 00 00 00 00 63 6D 61 70 66 69 6C 65 00 00 00 23 DF 00 00 10 A0 00 00 90 00");
        execute("00 CB A0 10 04 5C 02 DF 22 00 ",
                "DF 22 06 00 00 00 00 00 00 90 00 ");
        execute("00 CB A0 00 04 5C 02 DF 1F 00",
                "DF 1F 81 8D 01 6D 73 63 70 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 A0 00 00 00 00 00 00 00 00 00 00 00 63 61 72 64 69 64 00 00 00 00 00 20 DF 00 00 12 A0 00 00 00 00 00 00 00 00 00 00 00 63 61 72 64 61 70 70 73 00 00 00 21 DF 00 00 10 A0 00 00 00 00 00 00 00 00 00 00 00 63 61 72 64 63 66 00 00 00 00 00 22 DF 00 00 10 A0 00 00 6D 73 63 70 00 00 00 00 00 63 6D 61 70 66 69 6C 65 00 00 00 23 DF 00 00 10 A0 00 00 90 00");
        execute("00 CB A0 10 04 5C 02 DF 23 00 ",
                "DF 23 00 90 00");
        execute("00 CB A0 00 04 5C 02 DF 1F 00 ",
                "DF 1F 81 8D 01 6D 73 63 70 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 A0 00 00 00 00 00 00 00 00 00 00 00 63 61 72 64 69 64 00 00 00 00 00 20 DF 00 00 12 A0 00 00 00 00 00 00 00 00 00 00 00 63 61 72 64 61 70 70 73 00 00 00 21 DF 00 00 10 A0 00 00 00 00 00 00 00 00 00 00 00 63 61 72 64 63 66 00 00 00 00 00 22 DF 00 00 10 A0 00 00 6D 73 63 70 00 00 00 00 00 63 6D 61 70 66 69 6C 65 00 00 00 23 DF 00 00 10 A0 00 00 90 00 ");
        execute("00 CB A0 10 04 5C 02 DF 22 00 ",
                "DF 22 06 00 00 00 00 00 00 90 00");
        execute("00 CB A0 00 04 5C 02 DF 1F 00 ",
                "DF 1F 81 8D 01 6D 73 63 70 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 A0 00 00 00 00 00 00 00 00 00 00 00 63 61 72 64 69 64 00 00 00 00 00 20 DF 00 00 12 A0 00 00 00 00 00 00 00 00 00 00 00 63 61 72 64 61 70 70 73 00 00 00 21 DF 00 00 10 A0 00 00 00 00 00 00 00 00 00 00 00 63 61 72 64 63 66 00 00 00 00 00 22 DF 00 00 10 A0 00 00 6D 73 63 70 00 00 00 00 00 63 6D 61 70 66 69 6C 65 00 00 00 23 DF 00 00 10 A0 00 00 90 00");
        execute("00 CB A0 10 04 5C 02 DF 23 00 ",
                "DF 23 00 90 00 ");
        execute("00 CB A0 00 04 5C 02 DF 1F 00 ",
                "DF 1F 81 8D 01 6D 73 63 70 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 A0 00 00 00 00 00 00 00 00 00 00 00 63 61 72 64 69 64 00 00 00 00 00 20 DF 00 00 12 A0 00 00 00 00 00 00 00 00 00 00 00 63 61 72 64 61 70 70 73 00 00 00 21 DF 00 00 10 A0 00 00 00 00 00 00 00 00 00 00 00 63 61 72 64 63 66 00 00 00 00 00 22 DF 00 00 10 A0 00 00 6D 73 63 70 00 00 00 00 00 63 6D 61 70 66 69 6C 65 00 00 00 23 DF 00 00 10 A0 00 00 90 00");
        execute("00 CB A0 10 04 5C 02 DF 23 00", "DF 23 00 90 00");
    }

    @Test
    public void importOneRSA2048Key() {
        authenticatePin();
        execute("00 DB A0 10 09 DF 22 06 00 00 00 00 01 00");
        execute("00 DB A0 10 59 DF 23 56 32 00 35 00 37 00 66 00 30 00 33 00 36 00 32 00 2D 00 32 00 65 00 65 00 37 00 2D 00 34 00 34 00 66 00 35 00 2D 00 39 00 38 00 38 00 35 00 2D 00 33 00 36 00 66 00 61 00 34 00 39 00 30 00 66 00 33 00 30 00 63 00 31 00 00 00 00 00 00 00 00 00 01 00 00 00 00 00");
        execute("00 DB A0 10 09 DF 22 06 00 00 00 00 02 00");
        execute("00 DB A0 10 59 DF 23 56 32 00 35 00 37 00 66 00 30 00 33 00 36 00 32 00 2D 00 32 00 65 00 65 00 37 00 2D 00 34 00 34 00 66 00 35 00 2D 00 39 00 38 00 38 00 35 00 2D 00 33 00 36 00 66 00 61 00 34 00 39 00 30 00 66 00 33 00 30 00 63 00 31 00 00 00 00 00 00 00 00 00 03 00 00 00 00 00");
        execute("00 DB A0 10 09 DF 22 06 00 00 01 00 02 00");
        // create keyfile
        execute("00 E0 00 00 49 62 47 82 01 18 83 02 B0 81 8C 05 8F 10 10 10 00 A5 37 B8 09 80 01 07 83 01 81 95 01 40 B8 09 80 01 87 83 01 81 95 01 40 B8 09 80 01 47 83 01 81 95 01 40 B6 09 80 01 17 83 01 81 95 01 40 B6 09 80 01 57 83 01 81 95 01 40");
        execute("00 44 00 00");
        // put the key
        execute("10 DB 3F FF F0 70 82 04 B7 84 01 81 A5 82 04 B0 83 01 02 84 01 00 87 82 04 A6 30 82 04 A2 02 01 00 02 82 01 01 00 AE A1 7E EC 31 7D 53 86 0E CD 2D F7 1A E0 62 5B CD 06 F9 A3 A2 33 48 72 C3 17 07 F3 26 2E F6 33 91 C5 18 90 EC 8E AD 77 6D C5 7B 74 4B 6C 1F D6 43 C4 4E 65 D5 19 2B 9A 69 63 9A FF 95 E7 03 D6 E8 F8 83 1E A0 6B BD 29 71 00 A8 FE 98 2C 8D 6F DB 40 27 AA C3 5A F5 D3 13 AC F5 04 75 90 8E F1 5F 64 AE 53 EC 43 12 CC 51 74 3F 40 F4 F3 0B DF B0 28 CA 9D 1D 34 B4 A1 0C BE E8 BD 2C 23 40 3C 90 7B 21 B7 5D D2 DD F0 2A 73 34 62 2D CE 6E 40 FE 39 31 CD D2 DB 97 DD 63 21 6D 61 BB 9A A1 7E F7 CC 90 0E C8 C9 E0 79 CF CA 46 1F 67 48 28 66 73 80 7E 92 7B 9D 7E 80 3A 80 D6 15 8D 7C 62 ED 6A 1B BC BF 1B DD D1 7A 7C 26 59 FB C6 8F DB");
        execute("10 DB 3F FF F0 0F 8E 56 A4 6F 58 5E D8 46 F6 2F 8A FE BD 36 30 EF 2C D9 81 37 AF 0D F4 CA D0 74 E8 9B E0 D9 A0 43 39 DF 7B CF 02 BE D9 92 8A 11 58 AB 73 FA A3 59 02 03 01 00 01 02 82 01 00 18 21 78 C8 6A 8E 46 DC 5F 6F 3A CA CA 8B F7 0B 78 69 5E 55 9E 34 37 EE A3 C6 AA F2 8E 74 2E D1 31 73 6A D1 9B DE 9B 59 C5 71 64 7D CD 6E 43 77 F8 25 48 30 0A 22 50 44 26 0B FD 7F 13 D7 B8 50 1A 21 3C FD 1E 6D C4 D5 D5 27 A2 32 8C 14 9B F6 B8 F5 44 85 F4 38 BD 7F 4D 58 B9 02 C4 BC 15 04 85 8A 04 0C D4 B8 F0 00 0B C1 64 7C 35 5C E0 67 28 90 7A 6E FB 7A 2C FB 94 27 4D 41 D6 B7 88 48 9B 61 0A 86 61 4F 35 94 D0 27 AB 34 A7 9D 2A 5D D8 25 27 E0 F0 6B 84 FB 7E 78 00 D6 3D 53 95 57 6A ED BC 86 A1 6F 41 28 88 63 98 22 F1 A5 C0 44 54 E4 33 23 7D 8D");
        execute
        execute
        execute
        execute("00 DB 3F FF 0B D9 B8 75 89 1C 44 9A BD F5 94 49");
        // update may files
        execute("00 DB A0 00 10 DF 20 0D 01 01 00 00 00 07 9A 81 B0 FF FF 00 00");
        execute("00 DB A0 10 09 DF 22 06 00 00 01 00 03 00");
        execute("00 DB A0 10 59 DF 23 56 32 00 35 00 37 00 66 00 30 00 33 00 36 00 32 00 2D 00 32 00 65 00 65 00 37 00 2D 00 34 00 34 00 66 00 35 00 2D 00 39 00 38 00 38 00 35 00 2D 00 33 00 36 00 66 00 61 00 34 00 39 00 30 00 66 00 33 00 30 00 63 00 31 00 00 00 00 00 00 00 00 00 03 00 00 00 00 08");
        // read the public key
        execute("00 CB 3F FF 0A 70 08 84 01 81 A5 03 7F 49 80 00",
                "7F 49 82 01 09 81 82 01 00 AE A1 7E EC 31 7D 53 86 0E CD 2D F7 1A E0 62 5B CD 06 F9 A3 A2 33 48 72 C3 17 07 F3 26 2E F6 33 91 C5 18 90 EC 8E AD 77 6D C5 7B 74 4B 6C 1F D6 43 C4 4E 65 D5 19 2B 9A 69 63 9A FF 95 E7 03 D6 E8 F8 83 1E A0 6B BD 29 71 00 A8 FE 98 2C 8D 6F DB 40 27 AA C3 5A F5 D3 13 AC F5 04 75 90 8E F1 5F 64 AE 53 EC 43 12 CC 51 74 3F 40 F4 F3 0B DF B0 28 CA 9D 1D 34 B4 A1 0C BE E8 BD 2C 23 40 3C 90 7B 21 B7 5D D2 DD F0 2A 73 34 62 2D CE 6E 40 FE 39 31 CD D2 DB 97 DD 63 21 6D 61 BB 9A A1 7E F7 CC 90 0E C8 C9 E0 79 CF CA 46 1F 67 48 28 66 73 80 7E 92 7B 9D 7E 80 3A 80 D6 15 8D 7C 62 ED 6A 1B BC BF 1B DD D1 7A 7C 26 59 FB C6 8F DB 0F 8E 56 A4 6F 58 5E D8 46 F6 2F 8A FE BD 36 30 EF 2C D9 81 37 AF 0D F4 CA D0 74 E8 9B E0 D9 A0 43 39 DF 7B CF 02 BE D9 61 0E");
        execute("00 C0 00 00 0E",
                "92 8A 11 58 AB 73 FA A3 59 82 03 01 00 01 90 00");
        // sign some data
        execute("00 22 41 B6 06 80 01 57 84 01 81");
        execute("00 2A 9E 9A 22 30 20 30 0C 06 08 2A 86 48 86 F7 0D 02 05 05 00 04 10 CC CC CC CC CC CC CC CC CC CC CC CC CC CC CC CC 00");
        execute("00 22 41 B6 06 80 01 57 84 01 81");
        execute("00 2A 9E 9A 33 30 31 30 0D 06 09 60 86 48 01 65 03 04 02 01 05 00 04 20 CC CC CC CC CC CC CC CC CC CC CC CC CC CC CC CC CC CC CC CC CC CC CC CC CC CC CC CC CC CC CC CC 00");
        execute("00 22 41 B6 06 80 01 57 84 01 81");
        execute("00 2A 9E 9A 23 30 21 30 09 06 05 2B 0E 03 02 1A 05 00 04 14 CC CC CC CC CC CC CC CC CC CC CC CC CC CC CC CC CC CC CC CC 00");
        execute("00 22 41 B6 06 80 01 57 84 01 81");
        execute("00 2A 9E 9A 24 CC CC CC CC CC CC CC CC CC CC CC CC CC CC CC CC CC CC CC CC CC CC CC CC CC CC CC CC CC CC CC CC CC CC CC CC 00");
        // decrypt some data and verify the decryption
        execute("00 22 41 B8 06 80 01 47 84 01 81");
        execute
        execute("00 2A 80 86 10 44 DA 76 E1 C5 99 14 91 0A A6 93 8F 55 49 03 26 00", "74 65 73 74 31 32 33 34 35 36 37 38 39 30 00 00 00 00 00 00 90 00");

        deauthenticate();
    }

}
